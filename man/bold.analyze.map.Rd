% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bold.analyze.map.R
\name{bold.analyze.map}
\alias{bold.analyze.map}
\title{Visualize BIN occurrence data on maps}
\usage{
bold.analyze.map(bold.df, country = NULL, bbox = NULL)
}
\arguments{
\item{bold.df}{The data.frame retrieved from \code{\link[=bold.fetch]{bold.fetch()}}.}

\item{country}{A single or multiple character vector of country names. Default value is NULL.}

\item{bbox}{A numeric vector specifying the min, max values of the latitude and longitude. Default value is NULL.}
}
\value{
An 'output' list containing:
\itemize{
\item geo.df = A simple features (sf) ‘data.frame’ containing the geographic data.
\item plot = A visualization of the occurrences.
}
}
\description{
This function creates basic maps of BIN occurrence data at different scales.
}
\details{
\code{bold.analyze.map} extracts out the geographic information from the \code{\link[=bold.fetch]{bold.fetch()}} output to generate an occurrence map. Data points having NA values for either latitude or longitude or both are removed. Latitude and longitude values are in ‘decimal degrees’ format with a ’WGS84’ Coordinate Reference System (CRS) projection. Default view includes data mapped onto a world shape file using the \code{rnaturalearth::ne_countries()} at a 110 scale (low resolution). If the country is specified (single or multiple values), the function will specifically plot the occurrences on the specified country. Alternatively, a bounding box (bbox) can be defined for a specific region to be visualized. The function also provides a \code{sf} data frame of the GIS data which can be used for any other application/s.
}
\examples{
\dontrun{
# Download the ids
geo.data.ids <- bold.public.search(taxonomy = "Musca domestica")

# Fetch the data using the ids.
# api_key must be obtained from BOLD support before usage.

geo.data <- bold.fetch(param.data = geo.data.ids,
query.param = "processid",
param.index = 1, api_key = apikey)

# All data plotted.
geo.viz <- bold.analyze.map(geo.data)

# Data plotted only in one country
geo.viz <- bold.analyze.map(geo.data,
country = c("Saudi Arabia"))

# The sf dataframe of the downloaded data
geo.viz$geo.df
}

}
