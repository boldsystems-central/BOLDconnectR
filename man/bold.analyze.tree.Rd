% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bold.analyze.tree.R
\name{bold.analyze.tree}
\alias{bold.analyze.tree}
\title{Analyze and visualize the multiple sequence alignment}
\usage{
bold.analyze.tree(
  bold.df,
  dist.model,
  clus.method = c("nj", "njs"),
  dist.matrix = FALSE,
  newick.tree.export = FALSE,
  newick.file.path = NULL,
  newick.file.name = NULL,
  tree.plot = FALSE,
  tree.plot.type,
  ...
)
}
\arguments{
\item{bold.df}{A modified BCDM data frame obtained from \code{\link[=bold.analyze.align]{bold.analyze.align()}}.}

\item{dist.model}{A character string specifying the model to generate the distances.}

\item{clus.method}{A character vector specifying either \code{\link[ape:nj]{ape::nj()}} (neighbour joining) or \code{\link[ape:njs]{ape::njs()}} (neighbour joining with NAs) clustering algorithm.}

\item{dist.matrix}{A logical value specifying whether the distance matrix should be saved in the output. Default is FALSE.}

\item{newick.tree.export}{A logical value specifying whether newick tree should be generated and ex- ported. Default value is FALSE.}

\item{newick.file.path}{A character value specifying the folder path where the file should be saved.}

\item{newick.file.name}{A character value specifying the name of the exported file.}

\item{tree.plot}{Logical value specifying if a neighbour joining plot should be generated. Default value is FALSE.}

\item{tree.plot.type}{The layout of the tree. Based on \code{\link[ape:plot.phylo]{ape::plot.phylo()}} type.}

\item{...}{additional arguments from \code{\link[ape:dist.dna]{ape::dist.dna()}}}
}
\value{
An 'output' list containing:
\itemize{
\item dist_mat = A distance matrix based on the model selected if dist.matrix=TRUE.
\item base_freq = Overall base frequencies of the align.seq result.
\item plot = Neighbor Joining clustering visualization (if tree.plot=TRUE).
\item data_for_plot = A phylo object used for the plot.
\item NJ/NJS tree in a newick format (only if newick.tree.export=TRUE).
}
}
\description{
Calculates genetic distances and performs a Neighbor Joining tree estimation of the multiple sequence alignment output obtained from \code{bold.analyze.align}.
}
\details{
\code{bold.analyze.tree} analyzes the multiple sequence alignment output of the \code{bold.analyze.align} function to generate a distance matrix using the models available in the \code{\link[ape:dist.dna]{ape::dist.dna()}}. Setting \code{dist.matrix}= TRUE will store the underlying distance matrix in the output; however, the  default value for the argument is deliberately kept at FALSE to avoid potential memory issues with large data. Additional arguments for calculating distances can passed using the argument \code{...}. Setting \code{tree.plot}= TRUE generates a basic visualization of the Neighbor Joining (NJ) tree using the distance matrix from \code{\link[ape:dist.dna]{ape::dist.dna()}} and the \code{\link[ape:plot.phylo]{ape::plot.phylo()}} function. \code{tree.plot.type} specifies the type of tree and has the following options ("phylogram", "cladogram", "fan", "unrooted", "radial", "tidy" based on \code{type} argument of \code{\link[ape:plot.phylo]{ape::plot.phylo()}};The first alphabet can be used instead of the whole word). Both \code{ape::nj()} and \code{ape::njs()} are available for generating the tree. Additionally, the function provides base frequencies and offers an option to export the trees in a Newick format by specifying the name and path for output file.
}
\examples{
\dontrun{
library(msa)
library(Biostrings)

# Download the data ids
seq.data.ids <- bold.public.search(taxonomy = c("Eulimnadia"), filt.marker = "COI-5P")

# Fetch the data using the ids.
# api_key must be obtained from BOLD support before usage.

seq.data <- bold.fetch(param.data = seq.data.ids, query.param = "processid",
                       param.index = 1, api_key = apikey)

# Remove rows without species name information
seq <- seq.data[seq.data$species!="", ]

# Align the data
# Users need to install and load packages `msa` and `Biostrings`.
seq.align<-BOLDconnectR:::bold.analyze.align(seq.data,
                                             seq.name.fields = c("species","bin_uri"),
                                             marker="COI-5P",
                                             align.method="ClustalOmega")

#Analyze the data to get a tree
seq.analysis<-bold.analyze.tree(seq.align,
                                dist.model = "K80",
                                clus="nj",
                                tree.plot.type='p',
                                tree.plot=TRUE,
                                dist.matrix = T)

# Output
# A ‘phylo’ object of the plot
seq.analysis$data_for_plot
# A distance matrix based on the distance model selected
seq.analysis$dist_matrix
# Base frequencies of the sequences
seq.analysis$base_freq
}

}
