% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bold.export.R
\name{bold.export}
\alias{bold.export}
\title{Export files generated by BOLDconnectR}
\usage{
bold.export(
  bold.df,
  export = c("mod.df", "msa.fas", "fas"),
  fas.seq.name.fields = NULL,
  df.export.file.type = NULL,
  export.file.path = NULL,
  export.file.name = NULL
)
}
\arguments{
\item{bold.df}{The data.frame either retrieved from \code{\link[=bold.fetch]{bold.fetch()}},\code{bold.analyze.align} or a user modified BCDM dataset.}

\item{export}{A character input specifying the type of output required. Should be either of "mod.df","msa.fas" or "fas".}

\item{fas.seq.name.fields}{A single or multiple character vector indicating the column headers that should be used to name each sequence for the unaligned FASTA file. Default is NULL; in this case, only the processid is used as the name.}

\item{df.export.file.type}{A character value specifying the type of file to be exported for the modified dataframe. Currently ‘.csv’ and ‘.tsv’ options are available.}

\item{export.file.path}{A character value specifying the folder path where the file should be saved.}

\item{export.file.name}{A character value specifying the name of the exported file.}
}
\value{
It exports a .fas or a csv/tsv file based on the export argument.
}
\description{
The function is used to export some of the output data generated by BOLDconnectR
}
\details{
\code{bold.export} offers an export option for some of the sequence-based outputs obtained from functions within the \link{BOLDconnectR} package. Sequence information downloaded using \code{\link[=bold.fetch]{bold.fetch()}} or the aligned sequences obtained using \code{bold.analyze.align} can be exported as a FASTA file for any third party tool (via \code{export}=’fas’ or ’msa.fas’). Data fetched by \code{\link[=bold.fetch]{bold.fetch()}} can be directly used to export the unaligned FASTA file, while the modified dataframe from \code{bold.analyze.align} is required for exporting the multiple sequence alignment.
The name for individual sequences in the unaligned FASTA file output can be customized by using the \code{fas.seq.name.fields} argument. If more than one field is specified, the name will follow the sequence of the fields given in the vector. The multiple sequence aligned FASTA file uses the same name provided by the user in the \code{bold.analyze.align} function. Additionally, this function allows for the export of user-edited data (in taxonomy, geography etc.) as a csv/tsv file while retaining its BCDM format. This functionality is developed with the future potential of uploading data to BOLD using the package. Edits to the BCDM data can be made using any other R packages so long as it maintains the BCDM format.
}
\examples{
\dontrun{
Download data
data_for_export_ids <- bold.public.search(taxonomy = "Poecilia reticulata",
                                          filt.basecount= c(500,600),
                                          filt.marker = "COI-5P")

# Fetching the data using the ids
data_for_export <- bold.fetch(data_for_export_ids,
                              query.param = "processid",
                              param.index = 1,
                              api_key= apikey)

# Align the data (using processid and bin_uri as fields for sequence names)
# Users need to install and load packages `msa` and `Biostrings` before using bold.analyze.align.

seq.align<-bold.analyze.align(data_for_export,
                                             seq.name.fields = c("processid","bin_uri"),
                                             align.method = "ClustalOmega")
# Export the multiple sequence alignment
# Note the input data here is the modified BCDM data after using bold.analyze.align.
# file.path and file.name must be provided
bold.export(seq.align,export = "msa.fas",
export.file.path = "file_path",
export.file.name = "file_name")

# Export the fasta file (unaligned)
# Note that input data is the original BCDM data retrieved using bold.fetch.
# file.path and file.name must be provided
bold.export(data_for_export, export= "fas",
fas.seq.name.fields = c("species","bin_uri","processid"),
export.file.path = "",
export.file.name = "")
}

}
